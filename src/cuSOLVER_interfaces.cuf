module cusolver_interfaces
  ! This module provides an interface to some of the CUDA C cuSOLVER library, it will most
  ! likely break if PGI desides to include this library themselves. It was
  ! written for the CUDA 8.0 toolkit, so see that documentaion for an
  ! explaination of each function
  use iso_c_binding
  implicit none

  interface
    integer(c_int) function cusolverDnCreate(cusolverDnHandle) bind(C, name="cusolverDnCreate")
      use iso_c_binding
      use cublas
      implicit none
    
      type(c_ptr) ::  cusolverDnHandle
   
    end function cusolverDnCreate

    integer(c_int) function cusolverDnDestroy(cusolverDnHandle) bind(C, name="cusolverDnDestroy")
      use iso_c_binding
      use cublas
      implicit none
    
      type(c_ptr), value  ::  cusolverDnHandle
   
    end function cusolverDnDestroy

    integer(c_int) function cusolverDnSetStream(cusolverDnHandle, streamId) bind(C, name="cusolverDnSetStream")
      use iso_c_binding
      use cublas
      implicit none

      type(c_ptr), value  ::  cusolverDnHandle
      integer(c_int), value  ::  streamId

    end function cusolverDnSetStream

    integer(c_int) function cusolverDnDsyevd_bufferSize(cusolverDnHandle, cusolverEigMode, &
        cublasFillMode, n, d_A, lda, d_W, lwork) bind(C, name="cusolverDnDsyevd_bufferSize")
      use iso_c_binding
      use cublas
      implicit none

      type(c_ptr), value  ::  cusolverDnHandle
      integer(c_int), value  ::  cusolverEigMode
      integer(c_int), value  ::  cublasFillMode
      integer(c_int), value ::  n
      real(c_double), device  ::  d_A(lda, n)
      integer(c_int), value ::  lda
      real(c_double), device  ::  d_W(n)
      integer(c_int) ::  lwork

    end function cusolverDnDsyevd_bufferSize

    integer(c_int) function cusolverDnDsyevd(cusolverDnHandle, cusolverEigMode, &
        cublasFillMode, n, d_A, lda, d_W, d_work, lwork, d_devInfo) bind(C, name="cusolverDnDsyevd")
      use iso_c_binding
      use cublas
      implicit none

      type(c_ptr), value  ::  cusolverDnHandle
      integer(c_int), value  ::  cusolverEigMode
      integer(c_int), value  ::  cublasFillMode
      integer(c_int), value ::  n
      real(c_double), device ::  d_A(lda, n)
      integer(c_int), value ::  lda
      real(c_double), device  ::  d_W(n)
      real(c_double), device  ::  d_work(lwork)
      integer(c_int), value  ::  lwork
      type(c_devptr), device ::  d_devInfo

    end function cusolverDnDsyevd

    integer(c_int) function cusolverDnDsygvd_bufferSize(cusolverDnHandle, &
      cusolverEigType, cusolverEigMode, cublasFillMode, n, d_A, lda, d_B, &
      ldb, d_W, lwork) bind(C, name ="cusolverDnDsygvd_bufferSize")
      use cublas
      use iso_c_binding
      type(c_ptr), value  ::  cusolverDnHandle
      integer(c_int), value  ::  cusolverEigType
      integer(c_int), value  ::  cusolverEigMode
      integer(c_int), value  ::  cublasFillMode
      integer(c_int), value ::  n
      real(c_double), device  ::  d_A(lda, n)
      integer(c_int), value ::  lda
      real(c_double), device  ::  d_B(ldb, n)
      integer(c_int), value ::  ldb
      real(c_double), device  ::  d_W(n)
      integer(c_int) ::  lwork

    end function cusolverDnDsygvd_bufferSize

    integer(c_int) function cusolverDnDsygvd(cusolverDnHandle, &
      cusolverEigType, cusolverEigMode, cublasFillMode, n, d_A, lda, d_B, &
      ldb, d_W, d_work, lwork, d_devinfo) bind(C, name ="cusolverDnDsygvd")
      use iso_c_binding
      use cublas
      type(c_ptr), value  ::  cusolverDnHandle
      integer(c_int), value  ::  cusolverEigType
      integer(c_int), value  ::  cusolverEigMode
      integer(c_int), value  ::  cublasFillMode
      integer(c_int), value ::  n
      real(c_double), device  ::  d_A(lda, n)
      integer(c_int), value ::  lda
      real(c_double), device  ::  d_B(ldb, n)
      integer(c_int), value ::  ldb
      real(c_double), device  ::  d_W(n)
      real(c_double), device  ::  d_work(lwork)
      integer(c_int), value ::  lwork
      type(c_devptr), device ::  d_devInfo

    end function cusolverDnDsygvd

  end interface
end module cusolver_interfaces
